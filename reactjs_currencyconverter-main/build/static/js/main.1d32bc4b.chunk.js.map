{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleSelect","e","setState","target","name","value","calculateResult","handleInput","amount","result","state","isNaN","fetch","convertTo","base","then","res","json","data","console","log","catch","err","error","handleSwap","preventDefault","currencies","this","className","type","onChange","map","currency","disabled","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAuJeA,E,kDAnJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAKC,UAAL,mBACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAD5B,uBAEU,MAFV,GAIA,EAAKC,kBAhBY,EAoBnBC,YAAc,SAACN,GACb,EAAKC,SAAS,CACZM,OAAQP,EAAEE,OAAOE,MACjBI,OAAQ,MAEV,EAAKH,kBAzBY,EA6BnBA,gBAAkB,WACZ,EAAKI,MAAMF,SAAWG,OAmBxBC,MAAM,wDAAD,OAAyD,EAAKF,MAAMG,UAApE,iBAAsF,EAAKH,MAAMI,MAAQ,CAC5G,OAAU,MACV,QAAW,CACT,kBAAmB,mCACnB,iBAAkB,wDAGrBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAELC,QAAQC,IAAIF,GACZ,EAAKhB,SAAS,CACZO,OAAQS,EAAO,EAAKR,MAAMF,YAG7Ba,OAAM,SAAAC,GAAG,OAAIH,QAAQI,MAAMD,OAhEb,EAoEnBE,WAAa,SAACvB,GACZ,IAAMa,EAAO,EAAKJ,MAAMI,KAClBD,EAAY,EAAKH,MAAMG,UAC7BZ,EAAEwB,iBACF,EAAKvB,SAAS,CACZY,KAAMD,EACNA,UAAWC,EACXL,OAAQ,MAEV,EAAKH,kBA3EL,EAAKI,MAAQ,CACTgB,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,OACzCZ,KAAM,MACNN,OAAQ,GACRK,UAAW,MACXJ,OAAQ,IAPK,E,0CAiFnB,WAAU,IAAD,EACiDkB,KAAKjB,MAArDgB,EADD,EACCA,WAAYZ,EADb,EACaA,KAAMN,EADnB,EACmBA,OAAQK,EAD3B,EAC2BA,UAAWJ,EADtC,EACsCA,OAC7C,OACE,qBAAKmB,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,gCACA,uBAAK,uBACL,+BAAKpB,EAAL,IAAcM,EAAd,uBACA,+BAAgB,OAAXL,EAAkB,MAAQA,EAA/B,IAAwCI,KACxC,uBACA,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAMA,UAAU,mBAAhB,UACE,uBACEC,KAAK,SACLxB,MAAOG,EACPsB,SAAUH,KAAKpB,YACfqB,UAAU,sCAEZ,wBACExB,KAAK,OAAOC,MAAOS,EACnBgB,SAAUH,KAAK3B,aACf4B,UAAU,+BAHZ,SAKGF,EAAWK,KAAI,SAACC,GAAD,OACd,wBAAuB3B,MAAO2B,EAA9B,SACGA,GADUA,WAOnB,uBAAMJ,UAAU,mBAAhB,UACE,uBACEK,UAAU,EACV5B,MAAkB,OAAXI,EAAkB,iBAAmBA,EAC5CmB,UAAU,sCAEZ,wBAAQxB,KAAK,YAAYC,MAAOQ,EAC9BiB,SAAUH,KAAK3B,aACf4B,UAAU,+BAFZ,SAIGF,EAAWK,KAAI,SAACC,GAAD,OACd,wBAAuB3B,MAAO2B,EAA9B,SACGA,GADUA,cAQrB,qBAAKJ,UAAU,6BAAf,SACE,oBAAIM,QAASP,KAAKH,WAAYI,UAAU,OAAxC,+BAhDN,OADF,e,GAvFQO,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d32bc4b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        currencies: ['USD', 'AUD', 'SGD', 'PHP', 'EUR'],\n        base: 'USD',\n        amount: '',\n        convertTo: 'EUR',\n        result: '',\n    }\n  }\n\n  handleSelect = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      result: null\n    },\n    this.calculateResult\n    );\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      amount: e.target.value,\n      result: null\n    },\n    this.calculateResult\n    );\n  }\n\n  calculateResult = () => {\n    if (this.state.amount === isNaN) {\n        return;\n    } \n    else {\n      /* THIS API IS NO LONGER FREE\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n      .then(res => res.json())\n      .then((data) => {\n        const date = data.date;\n        const result = (data.rates[this.state.convertTo] * this.state.amount).toFixed(4);\n        this.setState({\n          result,\n          date\n        });\n      })\n      .catch((err) => {\n        console.error('Error: ', err);\n      })\n      */\n      fetch(`https://currency-exchange.p.rapidapi.com/exchange?to=${this.state.convertTo}&from=${this.state.base}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"currency-exchange.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"6f091c3508msh3b56a5a642252cap1e0359jsncd5db2d44811\"\n        }\n      })\n      .then(res => res.json())\n      .then((data) => {\n        // data is the exchange rate\n        console.log(data);\n        this.setState({\n          result: data * this.state.amount\n        })\n      })\n      .catch(err => console.error(err));\n    }\n  }\n\n  handleSwap = (e) => {\n    const base = this.state.base;\n    const convertTo = this.state.convertTo;\n    e.preventDefault();\n    this.setState({\n      base: convertTo,\n      convertTo: base,\n      result: null\n    },\n    this.calculateResult\n    );\n  }\n\n  render() {\n    const { currencies, base, amount, convertTo, result } = this.state;\n    return (\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 mx-auto\">\n            <div className=\"card card-body\">\n              <h1 className=\"text-center\">Currency Converter</h1>\n              <br/><br/>\n              <h5>{amount} {base} is equivalent to</h5>\n              <h2>{result === null ? '...' : result} {convertTo}</h2>\n              <br/>\n              <div className=\"row\">\n                <div className=\"col-sm-10\">\n                  <form className=\"form-inline mb-4\">\n                    <input \n                      type=\"number\" \n                      value={amount}\n                      onChange={this.handleInput}\n                      className=\"form-control form-control-lg mx-3\" \n                    />\n                    <select \n                      name=\"base\" value={base}\n                      onChange={this.handleSelect} \n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map((currency) => \n                        <option key={currency} value={currency}>\n                          {currency}\n                        </option>\n                      )}\n                    </select>\n                  </form>\n\n                  <form className=\"form-inline mb-4\">\n                    <input \n                      disabled={true}\n                      value={result === null ? 'Calculating...' : result}\n                      className=\"form-control form-control-lg mx-3\" \n                    />\n                    <select name=\"convertTo\" value={convertTo} \n                      onChange={this.handleSelect}\n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map((currency) => \n                        <option key={currency} value={currency}>\n                          {currency}\n                        </option>\n                      )}\n                    </select>\n                  </form>\n                </div>\n\n                <div className=\"col-sm-2 align-self-center\">\n                  <h1 onClick={this.handleSwap} className=\"swap\">&#8595;&#8593;</h1>\n                </div>\n\n              </div> {/* End of row */}\n            </div> {/* End of card */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}